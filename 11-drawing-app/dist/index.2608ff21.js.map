{"mappings":"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","sources":["<anon>","javascript/script.js"],"sourcesContent":["\"use strict\";\nconst canvas = document.querySelector(\"canvas\");\nconst toolBtns = document.querySelectorAll(\".tool\");\nconst brushBtn = document.querySelector(\".brush\");\nconst eraseBtn = document.querySelector(\".eraser\");\nconst fillColorBtn = document.querySelector(\".fill-color\");\nconst sizeSlider = document.querySelector(\"#size-slider\");\nconst size = document.querySelector(\".size\");\nconst pickedColor = document.querySelector(\"#pick-color\");\nconst clearCanvas = document.querySelector(\".clear\");\nconst saveImg = document.querySelector(\".save\");\nconst ctx = canvas.getContext(\"2d\");\nlet prevMouseX, prevMouseY, snapshot, isDrawing = false, fillColor = false, selectedTool = \"brush\", brushWidth = 1, selectedColor = \"#000\";\nconst setCanvasBackground = ()=>{\n    ctx.fillStyle = \"#fff\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    ctx.fillStyle = selectedColor;\n};\nconst drawRect = (event)=>{\n    if (!fillColor) return ctx.strokeRect(event.offsetX, event.offsetY, prevMouseX - event.offsetX, prevMouseY - event.offsetY);\n    ctx.fillRect(event.offsetX, event.offsetY, prevMouseX - event.offsetX, prevMouseY - event.offsetY);\n};\nconst drawCircle = (event)=>{\n    ctx.beginPath();\n    let radius = Math.sqrt(Math.pow(prevMouseX - event.offsetX, 2) + Math.pow(prevMouseY - event.offsetY, 2));\n    ctx.arc(prevMouseX, prevMouseY, radius, 0, 2 * Math.PI);\n    fillColor ? ctx.fill() : ctx.stroke();\n};\nconst drawTriangle = (event)=>{\n    ctx.beginPath();\n    ctx.moveTo(prevMouseX, prevMouseY);\n    ctx.lineTo(event.offsetX, event.offsetY);\n    ctx.lineTo(prevMouseX * 2 - event.offsetX, event.offsetY);\n    ctx.closePath();\n    fillColor ? ctx.fill() : ctx.stroke();\n};\nconst startDraw = (event)=>{\n    isDrawing = true;\n    prevMouseX = event.offsetX;\n    prevMouseY = event.offsetY;\n    ctx.beginPath();\n    ctx.lineWidth = brushWidth;\n    ctx.strokeStyle = selectedColor;\n    ctx.fillStyle = selectedColor;\n    snapshot = ctx.getImageData(0, 0, canvas.width, canvas.height);\n};\nconst drawing = (event)=>{\n    if (!isDrawing) return;\n    ctx.putImageData(snapshot, 0, 0);\n    if (selectedTool === \"brush\" || selectedTool === \"eraser\") {\n        ctx.strokeStyle = selectedTool === \"eraser\" ? \"#fff\" : selectedColor;\n        ctx.lineTo(event.offsetX, event.offsetY);\n        ctx.stroke();\n    } else if (selectedTool === \"rectangle\") drawRect(event);\n    else if (selectedTool === \"circle\") drawCircle(event);\n    else drawTriangle(event);\n};\nwindow.addEventListener(\"load\", ()=>{\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n    setCanvasBackground();\n});\npickedColor.addEventListener(\"change\", ()=>selectedColor = pickedColor.value);\nsizeSlider.addEventListener(\"input\", ()=>{\n    brushWidth = sizeSlider.value;\n    size.textContent = sizeSlider.value;\n});\nbrushBtn.addEventListener(\"click\", ()=>{\n    selectedTool = \"brush\";\n    brushBtn.className = \"btn btn-primary w-100 text-start brush\";\n    eraseBtn.className = \"btn btn-outline-primary w-100 text-start eraser\";\n    toolBtns.forEach((btn)=>{\n        btn.className = \"btn btn-outline-primary w-100 text-start tool\";\n    });\n});\neraseBtn.addEventListener(\"click\", ()=>{\n    selectedTool = \"eraser\";\n    brushBtn.className = \"btn btn-outline-primary w-100 text-start brush\";\n    eraseBtn.className = \"btn btn-primary w-100 text-start eraser\";\n    toolBtns.forEach((btn)=>{\n        btn.className = \"btn btn-outline-primary w-100 text-start tool\";\n    });\n});\nfillColorBtn.addEventListener(\"click\", ()=>{\n    if (fillColor) {\n        fillColor = false;\n        fillColorBtn.className = \"btn btn-outline-primary w-100 text-start fill-color\";\n    } else {\n        fillColor = true;\n        fillColorBtn.className = \"btn btn-primary w-100 text-start fill-color\";\n    }\n});\ntoolBtns.forEach((btn)=>{\n    btn.addEventListener(\"click\", ()=>{\n        toolBtns.forEach((btn)=>{\n            btn.className = \"btn btn-outline-primary w-100 text-start tool\";\n        });\n        btn.className = \"btn btn-primary w-100 text-start tool\";\n        brushBtn.className = \"btn btn-outline-primary w-100 text-start brush\";\n        eraseBtn.className = \"btn btn-outline-primary w-100 text-start eraser\";\n        selectedTool = btn.id;\n    });\n});\nclearCanvas.addEventListener(\"click\", ()=>{\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    setCanvasBackground();\n});\nsaveImg.addEventListener(\"click\", ()=>{\n    const link = document.createElement(\"a\");\n    link.download = `${Date.now()}-S1mon009.jpg`;\n    link.href = canvas.toDataURL();\n    link.click();\n});\ncanvas.addEventListener(\"mousedown\", startDraw);\ncanvas.addEventListener(\"mousemove\", drawing);\ncanvas.addEventListener(\"mouseup\", ()=>isDrawing = false);\n\n//# sourceMappingURL=index.2608ff21.js.map\n","\"use strict\";\r\n\r\nconst canvas = document.querySelector(\"canvas\");\r\nconst toolBtns = document.querySelectorAll(\".tool\");\r\nconst brushBtn = document.querySelector(\".brush\");\r\nconst eraseBtn = document.querySelector(\".eraser\");\r\nconst fillColorBtn = document.querySelector(\".fill-color\");\r\nconst sizeSlider = document.querySelector(\"#size-slider\");\r\nconst size = document.querySelector(\".size\");\r\nconst pickedColor = document.querySelector(\"#pick-color\");\r\nconst clearCanvas = document.querySelector(\".clear\");\r\nconst saveImg = document.querySelector(\".save\");\r\nconst ctx = canvas.getContext(\"2d\");\r\nlet prevMouseX,\r\n  prevMouseY,\r\n  snapshot,\r\n  isDrawing = false,\r\n  fillColor = false,\r\n  selectedTool = \"brush\",\r\n  brushWidth = 1,\r\n  selectedColor = \"#000\";\r\n\r\nconst setCanvasBackground = () => {\r\n  ctx.fillStyle = \"#fff\";\r\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n  ctx.fillStyle = selectedColor;\r\n};\r\nconst drawRect = (event) => {\r\n  if (!fillColor) {\r\n    return ctx.strokeRect(\r\n      event.offsetX,\r\n      event.offsetY,\r\n      prevMouseX - event.offsetX,\r\n      prevMouseY - event.offsetY\r\n    );\r\n  }\r\n  ctx.fillRect(\r\n    event.offsetX,\r\n    event.offsetY,\r\n    prevMouseX - event.offsetX,\r\n    prevMouseY - event.offsetY\r\n  );\r\n};\r\nconst drawCircle = (event) => {\r\n  ctx.beginPath();\r\n\r\n  let radius = Math.sqrt(\r\n    Math.pow(prevMouseX - event.offsetX, 2) +\r\n      Math.pow(prevMouseY - event.offsetY, 2)\r\n  );\r\n  ctx.arc(prevMouseX, prevMouseY, radius, 0, 2 * Math.PI);\r\n\r\n  fillColor ? ctx.fill() : ctx.stroke();\r\n};\r\nconst drawTriangle = (event) => {\r\n  ctx.beginPath();\r\n  ctx.moveTo(prevMouseX, prevMouseY);\r\n  ctx.lineTo(event.offsetX, event.offsetY);\r\n  ctx.lineTo(prevMouseX * 2 - event.offsetX, event.offsetY);\r\n  ctx.closePath();\r\n\r\n  fillColor ? ctx.fill() : ctx.stroke();\r\n};\r\nconst startDraw = (event) => {\r\n  isDrawing = true;\r\n  prevMouseX = event.offsetX;\r\n  prevMouseY = event.offsetY;\r\n  ctx.beginPath();\r\n  ctx.lineWidth = brushWidth;\r\n  ctx.strokeStyle = selectedColor;\r\n  ctx.fillStyle = selectedColor;\r\n  snapshot = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n};\r\nconst drawing = (event) => {\r\n  if (!isDrawing) return;\r\n  ctx.putImageData(snapshot, 0, 0);\r\n  if (selectedTool === \"brush\" || selectedTool === \"eraser\") {\r\n    ctx.strokeStyle = selectedTool === \"eraser\" ? \"#fff\" : selectedColor;\r\n\r\n    ctx.lineTo(event.offsetX, event.offsetY);\r\n    ctx.stroke();\r\n  } else if (selectedTool === \"rectangle\") {\r\n    drawRect(event);\r\n  } else if (selectedTool === \"circle\") {\r\n    drawCircle(event);\r\n  } else {\r\n    drawTriangle(event);\r\n  }\r\n};\r\nwindow.addEventListener(\"load\", () => {\r\n  canvas.width = canvas.offsetWidth;\r\n  canvas.height = canvas.offsetHeight;\r\n\r\n  setCanvasBackground();\r\n});\r\npickedColor.addEventListener(\r\n  \"change\",\r\n  () => (selectedColor = pickedColor.value)\r\n);\r\nsizeSlider.addEventListener(\"input\", () => {\r\n  brushWidth = sizeSlider.value;\r\n  size.textContent = sizeSlider.value;\r\n});\r\nbrushBtn.addEventListener(\"click\", () => {\r\n  selectedTool = \"brush\";\r\n\r\n  brushBtn.className = \"btn btn-primary w-100 text-start brush\";\r\n  eraseBtn.className = \"btn btn-outline-primary w-100 text-start eraser\";\r\n\r\n  toolBtns.forEach((btn) => {\r\n    btn.className = \"btn btn-outline-primary w-100 text-start tool\";\r\n  });\r\n});\r\neraseBtn.addEventListener(\"click\", () => {\r\n  selectedTool = \"eraser\";\r\n\r\n  brushBtn.className = \"btn btn-outline-primary w-100 text-start brush\";\r\n  eraseBtn.className = \"btn btn-primary w-100 text-start eraser\";\r\n\r\n  toolBtns.forEach((btn) => {\r\n    btn.className = \"btn btn-outline-primary w-100 text-start tool\";\r\n  });\r\n});\r\nfillColorBtn.addEventListener(\"click\", () => {\r\n  if (fillColor) {\r\n    fillColor = false;\r\n    fillColorBtn.className =\r\n      \"btn btn-outline-primary w-100 text-start fill-color\";\r\n  } else {\r\n    fillColor = true;\r\n    fillColorBtn.className = \"btn btn-primary w-100 text-start fill-color\";\r\n  }\r\n});\r\ntoolBtns.forEach((btn) => {\r\n  btn.addEventListener(\"click\", () => {\r\n    toolBtns.forEach((btn) => {\r\n      btn.className = \"btn btn-outline-primary w-100 text-start tool\";\r\n    });\r\n\r\n    btn.className = \"btn btn-primary w-100 text-start tool\";\r\n    brushBtn.className = \"btn btn-outline-primary w-100 text-start brush\";\r\n    eraseBtn.className = \"btn btn-outline-primary w-100 text-start eraser\";\r\n\r\n    selectedTool = btn.id;\r\n  });\r\n});\r\nclearCanvas.addEventListener(\"click\", () => {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  setCanvasBackground();\r\n});\r\nsaveImg.addEventListener(\"click\", () => {\r\n  const link = document.createElement(\"a\");\r\n  link.download = `${Date.now()}-S1mon009.jpg`;\r\n  link.href = canvas.toDataURL();\r\n  link.click();\r\n});\r\ncanvas.addEventListener(\"mousedown\", startDraw);\r\ncanvas.addEventListener(\"mousemove\", drawing);\r\ncanvas.addEventListener(\"mouseup\", () => (isDrawing = false));\r\n"],"names":["canvas","document","querySelector","toolBtns","querySelectorAll","brushBtn","eraseBtn","fillColorBtn","sizeSlider","size","pickedColor","clearCanvas","saveImg","ctx","getContext","prevMouseX","prevMouseY","snapshot","isDrawing","fillColor","selectedTool","brushWidth","selectedColor","setCanvasBackground","fillStyle","fillRect","width","height","drawRect","event","strokeRect","offsetX","offsetY","drawCircle","beginPath","radius","Math","sqrt","pow","arc","PI","fill","stroke","drawTriangle","moveTo","lineTo","closePath","window","addEventListener","offsetWidth","offsetHeight","value","textContent","className","forEach","btn","id","clearRect","link","createElement","download","Date","now","href","toDataURL","click","lineWidth","strokeStyle","getImageData","putImageData"],"version":3,"file":"index.2608ff21.js.map"}